<Window x:Class="Yanitta.Windows.WinProfileEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Windows="clr-namespace:Yanitta.Windows"
        xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:res="clr-namespace:Yanitta.Properties"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:yanitta="clr-namespace:Yanitta"
        Title="Profile editor"
        Name="profileEditor"
        Style="{DynamicResource KamillaStyle}"
        Width="1280"
        Height="950"
        KeyDown="TextBox_KeyDown"
        Icon="/Yanitta;component/Resources/BNUpdate.png">

    <Window.Resources>
        <RoutedUICommand x:Key="CopyFromRotation" />
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="Save" Key="S" Modifiers="Control" />
    </Window.InputBindings>

    <Window.CommandBindings>
        <CommandBinding Command="Save" Executed="CommandBinding_Executed_Save" />
        <CommandBinding Command="{StaticResource CopyFromRotation}" Executed="CommandBinding_CopyFromRotation_Executed" />
    </Window.CommandBindings>

    <Grid DataContext="{Binding Source={x:Static yanitta:ProfileDb.Instance}}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="23" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <TabControl Grid.Column="1" Grid.Row="0">
            <TabItem Header="Ability list">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500*"/>
                        <ColumnDefinition Width="700*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="29*"/>
                            <RowDefinition Height="71*"/>
                        </Grid.RowDefinitions>
                        <GridSplitter Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" />

                        <Grid Grid.Row="0" Margin="0,0,0,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToolBar VerticalAlignment="Top">
                                <Button Command="{Binding ProfileList/Add}" Foreground="Transparent" ToolTip="Add rotation">
                                    <Image Source="/Yanitta;component/Resources/Add.png" />
                                </Button>
                                <Button Command="{Binding ProfileList/Copy}" Foreground="Transparent" ToolTip="Copy rotation">
                                    <Image Source="/Yanitta;component/Resources/Clipboard.png" />
                                </Button>
                                <Button Command="{Binding ProfileList/Delete}" Foreground="Transparent" ToolTip="Delete rotation">
                                    <Image Source="/Yanitta;component/Resources/Denided.png" />
                                </Button>
                                <Separator />
                                <Button Foreground="Transparent" Command="{Binding ProfileList/Up}" ToolTip="Move Up">
                                    <Image Source="/Yanitta;component/Resources/Button_Up.png" />
                                </Button>
                                <Button Foreground="Transparent" Command="{Binding ProfileList/Down}"  ToolTip="Move Down">
                                    <Image Source="/Yanitta;component/Resources/Button_Down.png" />
                                </Button>
                            </ToolBar>
                            <Windows:ListViewEx x:Name="rotationList"
                                      ItemsChanged="listView_ItemsChanged"
                                      IsSynchronizedWithCurrentItem="true"
                                      ItemsSource="{Binding ProfileList/RotationList}"
                                      Grid.Row="1" Margin="0,0,0,5">
                                <Windows:ListViewEx.View>
                                    <GridView>
                                        <GridViewColumn Width="30" DisplayMemberBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}, Converter={yanitta:ItemsControlIndexConverter}}" />
                                        <GridViewColumn Width="200" DisplayMemberBinding="{Binding Name}" Header="Rotation name" />
                                        <GridViewColumn Width="30" Header="Control">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding HotKey.Control}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="30" Header="Shift">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding HotKey.Shift}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="30" Header="Alt">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding HotKey.Alt}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Key">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox Width="150" SelectedValue="{Binding HotKey.Key}" ItemsSource="{Binding Source={StaticResource KeyValues}}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </Windows:ListViewEx.View>
                            </Windows:ListViewEx>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToolBar VerticalAlignment="Top">
                                <Button Command="{Binding ProfileList/RotationList/Add}" Foreground="Transparent" ToolTip="Add ability">
                                    <Image Source="/Yanitta;component/Resources/Add.png" />
                                </Button>
                                <Button  Command="{Binding ProfileList/RotationList/Copy}" Foreground="Transparent" ToolTip="Copy ability">
                                    <Image Source="/Yanitta;component/Resources/Clipboard.png" />
                                </Button>
                                <Button Command="{Binding ProfileList/RotationList/Delete}" Foreground="Transparent" ToolTip="Delete ability">
                                    <Image Source="/Yanitta;component/Resources/Denided.png" />
                                </Button>
                                <Separator />
                                <Button Foreground="Transparent" Command="{Binding ProfileList/RotationList/Up}" ToolTip="Move Up">
                                    <Image Source="/Yanitta;component/Resources/Button_Up.png" />
                                </Button>
                                <Button Foreground="Transparent" Command="{Binding ProfileList/RotationList/Down}" ToolTip="Move Down">
                                    <Image Source="/Yanitta;component/Resources/Button_Down.png" />
                                </Button>
                                <Separator />
                                <Button Foreground="Transparent" Command="{StaticResource CopyFromRotation}">
                                    <Image Source="/Yanitta;component/Resources/CopyFromRotation.png" />
                                </Button>
                                <Separator />
                                <TextBlock Text="Ability filter:" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0" />
                                <TextBox Width="150" TextChanged="tbAbilityFilter_TextChanged" Margin="7" />
                            </ToolBar>
                            <Windows:ListViewEx x:Name="abilityList"
                                      ItemsChanged="listView_ItemsChanged"
                                      IsSynchronizedWithCurrentItem="True"
                                      ItemsSource="{Binding ProfileList/RotationList/AbilityList}"
                                      Grid.Row="1">
                                <Windows:ListViewEx.View>
                                    <GridView>
                                        <GridViewColumn Width="30" DisplayMemberBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}, Converter={yanitta:ItemsControlIndexConverter}}" />
                                        <GridViewColumn DisplayMemberBinding="{Binding SpellID}" Header="Spell Id" />
                                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding Name}" Header="Ability name" />
                                        <GridViewColumn Header="Moving state" Width="100" DisplayMemberBinding="{Binding IsMovingCheck}"/>

                                        <GridViewColumn Width="50" Header="Use in combat">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding IsUseIncombat}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Width="50" Header="Usable check">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding IsUsableCheck}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Width="50" Header="Cancel casting">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding CancelCasting}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Width="50" Header="Cancel chanel">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding CancelChannel}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Width="50" DisplayMemberBinding="{Binding RecastDelay}" Header="Recast delay" />
                                    </GridView>
                                </Windows:ListViewEx.View>
                            </Windows:ListViewEx>
                        </Grid>
                    </Grid>
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Left" />
                    <Grid Grid.Column="1" Margin="5,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="175"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TabControl Grid.Row="2">
                            <TabItem Header="Ability check code">
                                <Border BorderThickness="1" BorderBrush="#FF009600">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="25"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock FontFamily="Consolas" VerticalAlignment="Center" FontWeight="Bold" Margin="5,0,0,0">
                                            <Run Foreground="#FF9812C1">Func</Run>
                                            <Run Foreground="#FFFF0F27"> = </Run>
                                            <Run Foreground="#FF569CD6">function</Run>
                                            <Run Foreground="#FFFF0F27">(</Run>
                                            <Run>ability</Run>
                                            <Run Foreground="#FFFF0F27">,</Run>
                                            <Run>targetInfo</Run>
                                            <Run Foreground="#FFFF0F27">,</Run>
                                            <Run>target</Run>
                                            <Run Foreground="#FFFF0F27">)</Run>
                                        </TextBlock>
                                        <Border BorderThickness="1" BorderBrush="#FF009600" Grid.Row="1">
                                            <avalonedit:TextEditor FontFamily="Consolas" PreviewKeyDown="TextEditor_PreviewKeyDown"
                                                                   Text="{Binding ProfileList/RotationList/AbilityList/Lua, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                        </Border>
                                        <Label Grid.Row="2" Content="end" FontFamily="Consolas" Foreground="#FF569CD6" FontWeight="Bold" />
                                    </Grid>
                                </Border>
                            </TabItem>
                            <TabItem Header="Rotation code">
                                <Border BorderThickness="1" BorderBrush="#FF009600">
                                    <avalonedit:TextEditor FontFamily="Consolas" PreviewKeyDown="TextEditor_PreviewKeyDown"
                                                           Text="{Binding ProfileList/RotationList/Lua, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                </Border>
                            </TabItem>
                        </TabControl>
                        <GroupBox Header="Rotation">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox  ItemsSource="{Binding ProfileList/SpecList}" SelectedValue="{Binding ProfileList/RotationList/Spec}" Margin="4"/>
                                <TextBox Name="tbRotationName" Text="{Binding ProfileList/RotationList/Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  VerticalAlignment="Center" Grid.Column="1" />
                            </Grid>

                        </GroupBox>
                        <GroupBox Header="Ability" Grid.Row="1">
                            <Grid DataContext="{Binding ProfileList/RotationList/AbilityList}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="86*"/>
                                    <ColumnDefinition Width="45*"/>
                                    <ColumnDefinition Width="80"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="150"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>


                                    <TextBlock Grid.Column="0" Grid.Row="0" Margin="5,5,5,4" Text="Spell Id" VerticalAlignment="Center"/>
                                    <TextBox   Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Text="{Binding SpellID, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Right" VerticalAlignment="Center" x:Name="tbSpellId" />
                                    <Button    Grid.Column="2" Grid.Row="0" Margin="1,3,5,3" Content="{}>>" ToolTip="Set spell name" Click="Button_Click" />

                                    <TextBlock Grid.Column="0" Grid.Row="1" Margin="5,5,5,4" Text="Ability name" VerticalAlignment="Center"/>
                                    <TextBox   Grid.Column="1" Grid.Row="1" Margin="5,0,5,0" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Name="tbAbilityName"  VerticalAlignment="Center" Grid.ColumnSpan="2"/>

                                    <TextBlock Grid.Column="0" Grid.Row="2" Margin="5,5,5,4" Text="Target" VerticalAlignment="Center"/>

                                    <yanitta:MultySelectedComboBox Grid.Column="1" Grid.Row="2" Margin="5,0"
                                                                   EnumSource="{x:Type yanitta:TargetType}"
                                                                   SelectedItems="{Binding TargetList}" Grid.ColumnSpan="2" />

                                    <TextBlock Grid.Column="0" Grid.Row="3" Margin="5,5,5,4" Text="Moving state" VerticalAlignment="Center"/>
                                    <ComboBox  Grid.Column="1" Grid.Row="3" Margin="5,0" ItemsSource="{Binding Source={StaticResource MovingValues}}"
                                                          SelectedValue="{Binding IsMovingCheck}" Grid.ColumnSpan="2" />

                                    <TextBlock Grid.Column="0" Grid.Row="4" Margin="5,5,5,4" Text="Recast delay" VerticalAlignment="Center"/>
                                    <TextBox   Grid.Column="1" Grid.Row="4" Margin="5,4,5,3" Text="{Binding RecastDelay, UpdateSourceTrigger=PropertyChanged}" Name="tbRecastDelay"
                                               VerticalAlignment="Center" MaxLength="4" Grid.ColumnSpan="2" />
                                    <TextBlock Grid.Column="0" Grid.Row="5" Margin="5,5,5,4" Text="Range check" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Column="1" Grid.Row="5" Margin="5,0" Grid.ColumnSpan="2" SelectedValue="{Binding RangeCheck}" ItemsSource="{Binding Source={StaticResource RangeCheckTypes}}"/>
                                </Grid>

                                <StackPanel Grid.Column="1">
                                    <CheckBox Margin="3" IsChecked="{Binding IsUseIncombat}"  Content="Use in combat" />
                                    <CheckBox Margin="3" IsChecked="{Binding IsUsableCheck}"  Content="Usable check" />
                                    <CheckBox Margin="3" IsChecked="{Binding CancelCasting}"  Content="Cancel casting" />
                                    <CheckBox Margin="3" IsChecked="{Binding CancelChannel}"  Content="Cancel chanel" />
                                </StackPanel>

                                <!-- todo: maybe use parent source -->
                                <Image Grid.Column="2" VerticalAlignment="Top"
                                       Source="{Binding Source={x:Static yanitta:ProfileDb.Instance}, Path=ProfileList/RotationList/ImageSource}" />
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Profile code">
                <avalonedit:TextEditor FontFamily="Consolas" Text="{Binding ProfileList/Lua, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewKeyDown="TextEditor_PreviewKeyDown" />
            </TabItem>
            <TabItem Header="Core code">
                <avalonedit:TextEditor FontFamily="Consolas" Text="{Binding Lua, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewKeyDown="TextEditor_PreviewKeyDown" />
            </TabItem>
        </TabControl>

        <ListBox x:Name="profiLeList" IsSynchronizedWithCurrentItem="true" ItemsSource="{Binding ProfileList}" Grid.Row="0" HorizontalContentAlignment="Center" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Image Source="{Binding ImageSource}" Width="64" ToolTip="{Binding Class}" Cursor="Hand" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <StatusBar Grid.ColumnSpan="2" Grid.Row="1">
            <TextBlock Text="Curent profile: "/>
            <Image Source="{Binding ProfileList/ImageSource}" />
            <TextBlock Text="{Binding ProfileList/Class}" Width="150"/>
            <Separator />
            <TextBlock Text="Ability count: "/>
            <TextBlock Text="{Binding ProfileList/RotationList/AbilityList.Count}" Width="30"/>
            <Separator />
            <TextBlock Text="Rotation count: "/>
            <TextBlock Text="{Binding ProfileList/RotationList.Count}" Width="30"/>
        </StatusBar>
    </Grid>
</Window>